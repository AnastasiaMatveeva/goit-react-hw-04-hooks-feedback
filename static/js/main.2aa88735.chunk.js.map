{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistic.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","map","option","className","s","btn","key","name","onClick","charAt","toUpperCase","slice","length","Statistics","good","bad","neutral","totalFeedback","positivePercentage","statistic__box","Section","title","children","section__box","Notification","message","notification__box","App","useState","setGood","setNeutral","setBad","countTotalFeedback","event","target","getAttribute","state","totalFeedbacks","Math","floor","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,IAAM,+B,gBCAxBD,EAAOC,QAAU,CAAC,eAAiB,oC,gBCAnCD,EAAOC,QAAU,CAAC,aAAe,gC,gBCAjCD,EAAOC,QAAU,CAAC,kBAAoB,0C,uJCwBvBC,EArBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,oCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,4BACEC,UAAWC,IAAEC,IACbC,IAAKJ,EACLK,KAAML,EACNM,QAASR,GAERE,EAAOO,OAAO,GAAGC,cACjBR,EAAOS,MAAM,EAAGT,EAAOU,c,gBCOnBC,EAlBI,SAAC,GAMb,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,IACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,cACAC,EACI,EADJA,mBAEA,OACE,yBAAKf,UAAWC,IAAEe,gBAChB,oCAAUL,GACV,uCAAaE,GACb,mCAASD,GACT,qCAAWE,GACX,iDAAuBC,EAAvB,Q,gBCJSE,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,yBAAKnB,UAAWC,IAAEmB,cAChB,4BAAKF,GACJC,I,gBCIQE,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,yBAAKtB,UAAWC,IAAEsB,mBAChB,4BAAKD,KCDI,SAASE,IAAO,IAAD,EACJC,mBAAS,GADL,mBACrBd,EADqB,KACfe,EADe,OAEED,mBAAS,GAFX,mBAErBZ,EAFqB,KAEZc,EAFY,OAGNF,mBAAS,GAHH,mBAGrBb,EAHqB,KAGhBgB,EAHgB,KAwBtBC,EAAqB,WACzB,OAAOlB,EAAOE,EAAUD,GAQ1B,OACE,oCACE,kBAAC,EAAD,CAASM,MAAM,yBACb,kBAAC,EAAD,CAAiBtB,QALP,CAAC,OAAQ,UAAW,OAKKC,gBA/BjB,SAAAiC,GAItB,OAHmBA,EAAXC,OACeC,aAAa,SAGlC,IAAK,OACHN,GAAQ,SAAAO,GAAK,OAAIA,EAAQ,KACzB,MACF,IAAK,UACHN,GAAW,SAAAM,GAAK,OAAIA,EAAQ,KAC5B,MACF,IAAK,MACHL,GAAO,SAAAK,GAAK,OAAIA,EAAQ,KACxB,MACF,QACE,YAkBDJ,IACC,kBAAC,EAAD,CAASX,MAAM,aACb,kBAAC,EAAD,CACEP,KAAMA,EACNE,QAASA,EACTD,IAAKA,EACLG,mBAjB8B,WACtC,IAAMmB,EAAiBL,IACvB,OAAOM,KAAKC,MAAOzB,EAAOuB,EAAkB,KAehBG,GACpBvB,cAAee,OAInB,kBAAC,EAAD,CAAcP,QAAQ,uB,YCjD9BgB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAChB,EAAD,OAEFiB,SAASC,eAAe,W","file":"static/js/main.2aa88735.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__1jATa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistic__box\":\"Statistic_statistic__box__1Rs26\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section__box\":\"Section_section__box__1W5e5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification__box\":\"Notification_notification__box__3aF1T\"};","import React from 'react';\r\nimport s from './FeedbackOptions.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      {options.map(option => (\r\n        <button\r\n          className={s.btn}\r\n          key={option}\r\n          name={option}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option.charAt(0).toUpperCase()}\r\n          {option.slice(1, option.length)}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport s from './Statistic.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({\r\n  good,\r\n  bad,\r\n  neutral,\r\n  totalFeedback,\r\n  positivePercentage,\r\n}) => {\r\n  return (\r\n    <div className={s.statistic__box}>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {totalFeedback}</p>\r\n      <p>Positive Feedback: {positivePercentage} %</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  totalFeedback: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n","import React from 'react';\r\nimport s from './Section.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div className={s.section__box}>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n","import React from 'react';\r\nimport s from './Notification.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <div className={s.notification__box}>\r\n      <h4>{message}</h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = { message: PropTypes.string };\r\n","import React, { useState } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onLeaveFeedback = event => {\n    const { target } = event;\n    const btnType = target.getAttribute('name');\n\n    switch (btnType) {\n      case 'good':\n        setGood(state => state + 1);\n        break;\n      case 'neutral':\n        setNeutral(state => state + 1);\n        break;\n      case 'bad':\n        setBad(state => state + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n  const countPositiveFeedbackPercentage = () => {\n    const totalFeedbacks = countTotalFeedback();\n    return Math.floor((good / totalFeedbacks) * 100);\n  };\n  const options = ['good', 'neutral', 'bad'];\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={options} onLeaveFeedback={onLeaveFeedback} />\n      </Section>\n      {countTotalFeedback() ? (\n        <Section title=\"Statistic\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            positivePercentage={countPositiveFeedbackPercentage()}\n            totalFeedback={countTotalFeedback()}\n          />\n        </Section>\n      ) : (\n        <Notification message=\"No feedback given\" />\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}